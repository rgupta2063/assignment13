{"ast":null,"code":"var _jsxFileName = \"/Users/ritugupta/Desktop/CS648/assignment13/src/Products.js\";\nimport React, { Component } from 'react';\nimport Filters from './Filters';\nimport ProductTable from './ProductTable';\nimport ProductForm from './ProductForm';\nimport $ from 'jquery';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: '',\n      products: []\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleDestroy = this.handleDestroy.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  getProducts() {\n    $.ajax({\n      type: \"GET\",\n      url: 'http://localhost:3001/product/get/'\n    }).then(resp => {\n      console.table(resp);\n      this.setState({\n        products: resp\n      });\n    });\n  } // getProducts=()=> {\n  //     fetch('http://localhost:3001/product/get/')\n  //     .then(res => res.json())\n  //     .then(\n  //         result => {\n  //             this.setState({\n  //                 products: result\n  //             })\n  //         },\n  //         error => {\n  //             console.log('Error in Fetching: ', error)\n  //         }\n  //     )\n  // }\n\n\n  handleFilter(filterInput) {\n    this.setState(filterInput);\n  }\n\n  handleSave(product) {\n    if (!product.id) {\n      product.id = new Date().getTime();\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: 'http://localhost:3001/product/create/',\n      data: product\n    }).then(() => {\n      this.getProducts();\n    });\n  }\n\n  handleDestroy(productId) {\n    $.ajax({\n      type: \"DELETE\",\n      url: `http://localhost:3001/product/delete/${productId}`\n    }).then(() => {\n      this.getProducts();\n    });\n  } // handleDestroy(productId) {\n  //     fetch(`http://localhost:3001/product/delete/${productId}`, {method: 'delete'})\n  //         .then(res => res.json())\n  //         .then(data => {\n  //             this.setState((prevState) => {\n  //                 let products = prevState.products.filter(product => product._id !== data.id);\n  //                 return {products};\n  //             });\n  //         });\n  // }\n  // handleDestroy(productId) {\n  //     // this.setState((prevState)=> {\n  //     //     let products = prevState.products\n  //     //     fetch('http://localhost:3001/product/delete/' + productId,{\n  //     //         method:'delete'\n  //     //     })\n  //     //     delete products[productId]\n  //     //     return {products}\n  //     // });\n  //     // $.ajax({\n  //     //     type: 'DELETE',\n  //     //     url: `http://localhost:3001/product/delete/${productId}`\n  //     //   }).then(() => {\n  //     //     this.getProducts()\n  //     //   })\n  // }\n  // handleUpdateStatus = productId => {\n  //     $.ajax({\n  //       type: 'PUT',\n  //       url: `http://localhost:3001/product/update/${productId}`\n  //     }).then(() => {\n  //       this.getProducts()\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"My Inventory\"), React.createElement(Filters, {\n      onFilter: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(ProductTable, {\n      products: this.state.products,\n      filterText: this.state.filterText,\n      onDestroy: this.handleDestroy // onUpdate={this.handleUpdateStatus}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(ProductForm, {\n      onSave: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/ritugupta/Desktop/CS648/assignment13/src/Products.js"],"names":["React","Component","Filters","ProductTable","ProductForm","$","Products","constructor","props","state","filterText","products","handleFilter","bind","handleDestroy","handleSave","componentDidMount","getProducts","ajax","type","url","then","resp","console","table","setState","filterInput","product","id","Date","getTime","data","productId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Filters from './Filters'\r\nimport ProductTable from './ProductTable'\r\nimport ProductForm from './ProductForm'\r\nimport $ from 'jquery'\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filterText: '',\r\n            products:[]\r\n        }\r\n        this.handleFilter = this.handleFilter.bind(this)\r\n        this.handleDestroy = this.handleDestroy.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts()\r\n    }\r\n    \r\n    getProducts() {\r\n        $.ajax({\r\n          type: \"GET\",\r\n          url: 'http://localhost:3001/product/get/'\r\n        }).then(resp => {\r\n          console.table(resp)\r\n          this.setState({\r\n            products: resp\r\n          })\r\n        })\r\n      }\r\n    // getProducts=()=> {\r\n    //     fetch('http://localhost:3001/product/get/')\r\n    //     .then(res => res.json())\r\n    //     .then(\r\n    //         result => {\r\n    //             this.setState({\r\n    //                 products: result\r\n    //             })\r\n    //         },\r\n    //         error => {\r\n    //             console.log('Error in Fetching: ', error)\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    handleFilter(filterInput) {\r\n        this.setState(filterInput)\r\n    }\r\n\r\n    handleSave(product) {\r\n        if (!product.id) {\r\n            product.id = new Date().getTime()\r\n        }\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: 'http://localhost:3001/product/create/',\r\n            data: product\r\n          }).then(() => {\r\n            this.getProducts()\r\n          })\r\n        }\r\n\r\n    handleDestroy(productId) {\r\n        $.ajax({\r\n            type: \"DELETE\",\r\n            url: `http://localhost:3001/product/delete/${productId}`\r\n        }).then(() => {\r\n            this.getProducts()\r\n        })\r\n    }\r\n        // handleDestroy(productId) {\r\n        //     fetch(`http://localhost:3001/product/delete/${productId}`, {method: 'delete'})\r\n        //         .then(res => res.json())\r\n        //         .then(data => {\r\n        //             this.setState((prevState) => {\r\n        //                 let products = prevState.products.filter(product => product._id !== data.id);\r\n        //                 return {products};\r\n        //             });\r\n        //         });\r\n        // }\r\n    // handleDestroy(productId) {\r\n    //     // this.setState((prevState)=> {\r\n    //     //     let products = prevState.products\r\n\r\n    //     //     fetch('http://localhost:3001/product/delete/' + productId,{\r\n    //     //         method:'delete'\r\n    //     //     })\r\n    //     //     delete products[productId]\r\n    //     //     return {products}\r\n    //     // });\r\n    //     // $.ajax({\r\n    //     //     type: 'DELETE',\r\n    //     //     url: `http://localhost:3001/product/delete/${productId}`\r\n    //     //   }).then(() => {\r\n    //     //     this.getProducts()\r\n    //     //   })\r\n    // }\r\n\r\n    // handleUpdateStatus = productId => {\r\n    //     $.ajax({\r\n    //       type: 'PUT',\r\n    //       url: `http://localhost:3001/product/update/${productId}`\r\n    //     }).then(() => {\r\n    //       this.getProducts()\r\n    //     })\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>My Inventory</h1>\r\n                <Filters \r\n                    onFilter={this.handleFilter}></Filters>\r\n                <ProductTable \r\n                    products={this.state.products}\r\n                    filterText={this.state.filterText}\r\n                    onDestroy={this.handleDestroy}\r\n                    // onUpdate={this.handleUpdateStatus}\r\n                    ></ProductTable>\r\n                <ProductForm\r\n                    onSave={this.handleSave}></ProductForm>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}